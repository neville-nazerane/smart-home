@using HueModels = SmartHome.Models.PhilipsHue
@using BondModels = SmartHome.Models.Bond

@if (DeviceModel is not null)
{

    <div class="card" style="width: 18rem;">
        <div class="card-body">
            <h5 class="card-title">@DeviceModel.Name</h5>

            @switch (DeviceModel)
            {
                case HueModels.LightModel lightModel:
                    {

                        <p class="card-title">Philips Hue Light</p>
                        <button class="btn btn-sm @(lightModel.IsSwitchedOn ? "btn-success" : "btn-danger")"
                                @onclick="@(() => SmartContext.Request(lightModel).TriggerSwitchAsync(!lightModel.IsSwitchedOn))"></button>
                        <input type="color" value=@lightModel.ColorHex @onchange=@(e => HueColorSetAsync(lightModel, e)) />

                        break;
                    }
                case HueModels.MotionModel motionModel:
                    {

                        <p class="card-title">Motion Sensor</p>
                        <button class="btn btn-sm @(motionModel.IsMotionDetected ? "btn-success" : "btn-danger")"></button>
                        break;
                    }
                case BondModels.CeilingFanModel fanModel:
                    {
                        <p class="card-title">Celing Fan</p>
                        <div class="btn-group" role="group" aria-label="Fan Control">
                            <button type="button" class="btn btn-primary"
                                    @onclick=@(() => SmartContext.Request(fanModel).DecreaseAsync())>
                                ◁
                            </button>
                            <span class="btn bg-primary text-white">@fanModel.Speed</span>
                            <button type="button" class="btn btn-primary"
                            @onclick=@(() => SmartContext.Request(fanModel).IncreaseAsync())>
                                ▷
                            </button>
                        </div>

                        break;
                    }
                case BondModels.RollerModel roller:
                    {
                        <p class="card-title">Motion Sensor</p>
                        <button class="btn btn-sm @(roller.IsOpen ? "btn-success" : "btn-danger")"></button>
                        break;
                    }
            }
        </div>
    </div>


}